package sgxlkl;

enum Error {
  SUCCESS           = 0;
  INVALID_ARGUMENT  = 1;
  INTERNAL          = 3; /* Internal server error */
  NOT_PERMITTED     = 4; /* Command not permitted, e.g. because the server binds to an untrusted interface/is configured to only respond to attestation requests. */
  SIM_MODE          = 5; /* Not running in SGX hardware mode */
  REP_NOT_AVAILABLE = 6; /* Quote and attestation report are not available */
  APP_RUNNING       = 7; /* Application is already running */
  PARSE             = 8; /* Error parsing a configuration string */
}

/* Requests the enclave quote and potentially an IAS attestation verification
 * report. The IAS report is only available when sgx-lkl-run is run with the
 * corresponding SGXLKL_IAS_* configuration options to obtain an IAS report.
 */
message AttestRequest {}

/* Possible errors:
 *   SIM_MODE:          SGX-LKL is run in simulation mode and can't generate an
 *                      enclave report.
 *   REP_NOT_AVAILABLE: No enclave report/quote available.
 */
message AttestResult {
  required Error err = 1;
  required bytes quote = 2;
  required bytes ias_report = 3;
  required bytes ias_sign_ca_cert = 4;
  required bytes ias_sign_cert = 5;
  required bytes ias_report_signature = 6;
}


/* Requests SGX-LKL to run an executable. The path to the executable,
 * application arguments, and environment variables are specified as part of a
 * JSON application configuration. The configuration can also include disk
 * encryption keys and root hashes if required.
 */
message RunRequest {
  required string json_config = 1;
}

/* Possible errors:
 *   NOT_PERMITTED: This request is not permitted as this is an attest-only
 *                  endpoint.
 *   APP_RUNNING:   An application is already running.
 *   INTERNAL:      Internal server error.
 *   PARSE:         The provided JSON configuration could not be parsed
 *                  correctly.
 */
message RunResult {
  required Error err = 1;
  optional string err_msg = 2;
}


message Peer {
  required string key = 1;
  required string allowed_ips = 2;
  required string endpoint = 3;
}

/* Request a new Wireguard peer to be added. */
message AddPeersRequest {
  repeated Peer peers = 1;
}

/* Possible errors:
 *   NOT_PERMITTED: This request is not permitted as this is an attest-only
 *                  endpoint.
 *   INTERNAL:      Internal server error.
 */
message AddPeersResult {
  required Error err = 1;
  optional string err_msg = 2;
}

/* Remote control service of an SGX-LKL instance. */
service Control {
  rpc Run (RunRequest) returns (RunResult);
  rpc Attest (AttestRequest) returns (AttestResult);
  rpc AddPeers (AddPeersRequest) returns (AddPeersResult);
}
